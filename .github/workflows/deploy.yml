name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    uses: ./.github/workflows/ci.yml

  build:
    runs-on: ubuntu-24.04
    needs: ci
    env:
      CACHE_PATH: |
        ~/.cargo/bin/
        ~/.cargo/registry/index/
        ~/.cargo/registry/cache/
        ~/.cargo/git/db/
        ./**/target
    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo
        id: cache-cargo
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-
            ${{ runner.os }}-cargo-

      #      - uses: actions/cache/restore@v4
      #        id: cache-restore-cargo
      #        with:
      #          path: ${{ env.CACHE_PATH }}
      #          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/*.rs') }}
      #          restore-keys: |
      #            ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}-
      #            ${{ runner.os }}-cargo-build-
      #            ${{ runner.os }}-cargo-

      - uses: extractions/setup-just@v2
        with:
          just-version: 1.39.0

      - name: Setup rust
        run: |
          sudo apt update
          sudo apt install -y gcc-aarch64-linux-gnu
          rustup target add aarch64-unknown-linux-gnu
          just setup

      - name: Build
        env:
          ASSETS_ROOT: https://cdn.blog.romira.dev
          LEPTOS_HASH_FILES: true
        # build後、leptosがバイナリの差分を確認しているが、アーキテクチャを考慮せず、/target/release/以下のバイナリを参照しているため、暫定対応としてシンボリックリンクを張る
        # TODO: leptosにPRを送る
        run: |
          mkdir -p target/aarch64-unknown-linux-gnu/release target/release
          ln -sf ${PWD}/target/aarch64-unknown-linux-gnu/release/blog-romira-dev-server ${PWD}/target/release/blog-romira-dev-server
          stylance ./app
          cargo leptos build --release --bin-cargo-args="--target=aarch64-unknown-linux-gnu"
          cp target/release/hash.txt target/aarch64-unknown-linux-gnu/release/hash.txt

      #      - uses: actions/cache/save@v4
      #        id: cache-save-cargo
      #        with:
      #          path: ${{ env.CACHE_PATH }}
      #          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/*.rs') }}

      - name: Upload blog-romira-dev-server
        uses: actions/upload-artifact@v4
        with:
          name: blog-romira-dev-server
          path: |
            target/aarch64-unknown-linux-gnu/release/blog-romira-dev-server
            target/aarch64-unknown-linux-gnu/release/hash.txt

      - name: Upload site
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: target/site

  create-release-tag:
    runs-on: ubuntu-24.04
    needs: build
    outputs:
      release_tag: ${{ steps.tag_version.outputs.new_tag }}

    steps:
      - uses: actions/checkout@v4

      - name: Download blog-romira-dev-server
        uses: actions/download-artifact@v4
        with:
          name: blog-romira-dev-server
          path: /tmp/blog-romira-dev-server/

      - name: Download site
        uses: actions/download-artifact@v4
        with:
          name: site
          path: /tmp/site/

      - name: Package Artifact
        run: |
          tar -czvf /tmp/blog-romira-dev-server.tar.gz -C /tmp blog-romira-dev-server
          tar -czvf /tmp/site.tar.gz -C /tmp site

      - name: Bump version and push tag
        uses: mathieudutour/github-tag-action@v6.2
        id: tag_version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload blog-romira-dev-server asset
        id: upload-blog-romira-dev-server-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: /tmp/blog-romira-dev-server.tar.gz
          asset_name: blog-romira-dev-server.tar.gz
          asset_content_type: application/gzip

      - name: Upload site asset
        id: upload-site-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: /tmp/site.tar.gz
          asset_name: site.tar.gz
          asset_content_type: application/gzip

      - name: Set tag output
        run: echo "tag_name=${{ steps.tag_version.outputs.new_tag }}" >> $GITHUB_ENV

  deploy-static-file:
    runs-on: ubuntu-24.04
    needs: create-release-tag
    env:
      SITE_DOWNLOAD_PATH: /tmp/site/
    steps:
      - name: Download site
        uses: actions/download-artifact@v4
        with:
          name: site
          path: ${{ env.SITE_DOWNLOAD_PATH }}

      # 2025-01-25: AWS S3 SDKとR2の互換性問題が発生しているため、aws-cliのバージョンを指定する
      # https://www.cloudflarestatus.com/incidents/t5nrjmpxc1cj
      - name: Install aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2.22.35

      - name: Deploy to Cloudflare R2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: auto
        run: aws s3 --endpoint-url ${{ secrets.CLOUDFLARE_ENDPOINT_URL }} sync --delete ${{ env.SITE_DOWNLOAD_PATH }} s3://${{ secrets.CLOUDFLARE_BUCKET_NAME }}/

  deploy-blog-romira-dev-server:
    runs-on: ubuntu-24.04
    needs: create-release-tag
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: ap-northeast-1
      AWS_ROLE_TO_ASSUME: arn:aws:iam::616657986447:role/blog-romira-dev-leptos_github_actions_deploy_role
      INSTANCE_ID: mi-0c7195454110abb6d
      SOURCE_FILE_PATH: Cargo.toml
      DESTINATION_FILE_PATH: /home/romira/Cargo.toml

    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}

      - name: deploy to blog-romira-dev-leptos
        run: |
          COMMANDS="
            curl -L -o /tmp/blog-romira-dev-server.tar.gz 'https://github.com/${{ github.repository }}/releases/download/${{ needs.create-release-tag.outputs.release_tag }}/blog-romira-dev-server.tar.gz' &&
            tar -xzvf /tmp/blog-romira-dev-server.tar.gz -C /tmp &&
            sudo rsync -a --delete /tmp/blog-romira-dev-server/ /usr/local/blog-romira-dev-leptos/bin/ &&
            sudo chmod 755 /usr/local/blog-romira-dev-leptos/bin/blog-romira-dev-server &&
            sudo systemctl restart blog-romira-dev-leptos.service
          "
          COMMANDS=$(echo $COMMANDS | tr '\n' ' ')
          
          COMMAND_ID=$(aws ssm send-command --instance-ids ${{ env.INSTANCE_ID }} \
            --document-name "AWS-RunShellScript" \
            --parameters "{\"commands\":[\"$COMMANDS\"]}" \
            --region ${{ env.AWS_REGION }} \
            --query "Command.CommandId" \
            --output text)
          
          sleep 5  # コマンドが実行されるまで待つ
          STATUS=$(aws ssm list-command-invocations \
            --command-id "$COMMAND_ID" \
            --details \
            --region "${{ env.AWS_REGION }}" \
            --query "CommandInvocations[0].Status" \
            --output text)
          
          if [ "$STATUS" != "Success" ]; then
            echo "Command did not complete successfully. Fetching detailed logs..." >&2
          
            # Fetch detailed logs for debugging
            aws ssm list-command-invocations \
            --command-id "$COMMAND_ID" \
            --details \
            --region "${{ env.AWS_REGION }}" \
            || echo "Failed to fetch detailed logs." >&2
          
            exit 1
          fi

  purge-cloudflare-cache:
    needs:
      - deploy-static-file
      - deploy-blog-romira-dev-server
    uses: ./.github/workflows/purge_cloudflare_cache.yml
    secrets:
      CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
      CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
