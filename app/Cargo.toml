[package]
name = "blog-romira-dev-app"
version = "0.1.0"
edition = "2024"
# std::sync::LazyLock is stabilized in Rust version 1.80.0
# rust-version = "1.80.0"

[dependencies]
leptos = { workspace = true }
leptos_meta = { workspace = true }
leptos_router = { workspace = true }
leptos-use = { workspace = true }
serde = { workspace = true }
thiserror = { workspace = true }
stylance = { workspace = true }
tokio = { workspace = true, optional = true }
reqwest = { workspace = true }
tracing = { workspace = true }
chrono = { workspace = true }
envy = { workspace = true, optional = true }
serde_json = { workspace = true }
dotenv = { workspace = true, optional = true }

[dev-dependencies]
mockito = { workspace = true }

[features]
hydrate = ["leptos/hydrate"]
ssr = [
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "leptos-use/ssr",
    "tokio",
    "dotenv",
    "envy",
]

[package.metadata.cargo-all-features]
denylist = ["axum", "tower", "tower-http", "tokio", "leptos_axum"]
skip_feature_sets = [["csr", "ssr"], ["csr", "hydrate"], ["ssr", "hydrate"]]

[package.metadata.stylance]
# output_file
# When set, stylance-cli will bundle all css module files
# into by concatenating them and put the result in this file.
# output_file = "./styles/bundle.scss"

# output_dir
# When set, stylance-cli will create a folder named "stylance" inside
# the output_dir directory.
# The stylance folder will be populated with one file per detected css module
# and one _all.scss file that contains one `@use "file.module-hash.scss";` statement
# per module file.
# You can use that file to import all your modules into your main scss project.
output_dir = "../style/"

# folders
# folders in which stylance cli will look for css module files.
# defaults to ["./src/"]
# folders = ["./src/", "./style/"]

# extensions
# files ending with these extensions will be considered to be
# css modules by stylance cli and will be included in the output
# bundle
# defaults to [".module.scss", ".module.css"]
# extensions = [".module.scss", ".module.css"]

# scss_prelude
# When generating an scss file stylance-cli will prepend this string
# Useful to include a @use statement to all scss modules.
# scss_prelude = '@use "../path/to/prelude" as *;'

# hash_len
# Controls how long the hash name used in scoped classes should be.
# It is safe to lower this as much as you want, stylance cli will produce an
# error if two files end up with colliding hashes.
# defaults to 7
# hash_len = 7

# class_name_pattern
# Controls the shape of the transformed scoped class names.
# [name] will be replaced with the original class name
# [hash] will be replaced with the hash of css module file path.
# defaults to "[name]-[hash]"
# class_name_pattern = "my-project-[name]-[hash]"
